service: pufouniversity

plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function

resources:
  - ${file(resources/masters-dynamodb-table.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}

provider:
  name: aws
  runtime: nodejs8.10
  region: ${opt:region, self:custom.defaultRegion}
  stage: dev${env:SLSUSER, ""}

custom:
  defaultRegion: eu-west-1
  stage: ${opt:stage, self:provider.stage}
  defaultVarsStage: dev-user
  vars: ${file(./vars.yml):${opt:stage, self:custom.defaultVarsStage}}

functions:
  getMasters:
    handler: src/functions/getMasters.handler
    events:
      - http:
          path: /masters
          method: get
          cors: true
    environment:
      mastersTable: ${self:custom.vars.mastersTable}
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.vars.mastersTable}
  getMasterDetails:
    handler: src/functions/getMaster.handler
    events:
      - http:
          path: /master/{id}
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/${self:custom.vars.userPoolId}
    environment:
      mastersTable: ${self:custom.vars.mastersTable}
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:query
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.vars.mastersTable}
